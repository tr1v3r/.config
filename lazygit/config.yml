confirmonquit: false
git:
  branchLogCmd: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium --oneline {{branchName}} --"
  autofetch: true
  merging:
    manualcommit: false
  skiphookprefix: WIP
  paging:
    colorArg: always
    # for lazygit-edit: in many cases lazygit will be able to guess the right preset from your $(git config core.editor), or an environment variable such as $VISUAL or $EDITOR.
    pager: delta --dark --paging=never --24-bit-color=never --syntax-theme="OneHalfDark" --line-numbers --hyperlinks --hyperlinks-file-link-format="lazygit-edit://{path}:{line}"
gui:
  commitlength:
    show: true
  mouseevents: false
  scrollheight: 2
  scrollpastbottom: true
  theme:
    lightTheme: false
    # raw colorscheme
    # activeBorderColor:
    #   - cyan
    #   - bold
    # inactiveBorderColor:
    #   - white
    # optionsTextColor:
    #   - blue
    # selectedLineBgColor:
    #   - default
    # selectedRangeBgColor:
    #   - blue
    # colorscheme theme: catppuccin mocha
    activeBorderColor:
      - "#a6e3a1" # Green
      - bold
    inactiveBorderColor:
      - "#cdd6f4" # Text
    optionsTextColor:
      - "#89b4fa" # Blue
    selectedLineBgColor:
      - "#313244" # Surface0
    selectedRangeBgColor:
      - "#313244" # Surface0
    cherryPickedCommitBgColor:
      - "#94e2d5" # Teal
    cherryPickedCommitFgColor:
      - "#89b4fa" # Blue
    unstagedChangesColor:
      - red # Red
reporting: "off"
splashupdatesindex: 0
startuppopupversion: 1
keybinding:
  universal:
    quit-alt1: "<esc>"
    prevItem-alt: "u"
    nextItem-alt: "e"
    prevBlock-alt: "n"
    nextBlock-alt: "i"
    nextMatch: "="
    prevMatch: "-"
    startSearch: /
    new: "k"
    edit: "o"
    openFile: "O"
    scrollUpMain-alt1: "U"
    scrollDownMain-alt1: "E"
    scrollUpMain-alt2: "<c-u>"
    scrollDownMain-alt2: "<c-e>"
    undo: "l"
    redo: "<c-r>"
    diffingMenu: "M"
    filteringMenu: "<c-f>"
  files:
    ignoreFile: "I"
  commits:
    moveDownCommit: "<c-e>"
    moveUpCommit: "<c-u>"
    startInteractiveRebase: "I"
  branches:
    viewGitFlowOptions: "I"
    setUpstream: "U"
    forceCheckoutBranch: <disabled>
customCommands: # docs: https://github.com/jesseduffield/lazygit/blob/master/docs/Custom_Command_Keybindings.md
  - key: "F"
    context: "global"
    description: "Fetch and Prune"
    command: "git fetch -p"
    loadingText: "Fetching and pruning remote branches..."
    output: log
  - key: "n"
    context: "localBranches"
    prompts:
      - type: "menu"
        title: "What kind of branch is it?"
        key: "BranchType"
        options:
          - name: "feature"
            description: "a feature branch"
            value: "feature"
          - name: "hotfix"
            description: "a hotfix branch"
            value: "hotfix"
          - name: "release"
            description: "a release branch"
            value: "release"
      - type: "input"
        title: "What is the new branch name?"
        key: "BranchName"
        initialValue: ""
    command: "git flow {{.Form.BranchType}} start {{.Form.BranchName}}"
    loadingText: "Creating branch"
  - key: "G"
    description: "Open remote repository"
    # command: "echo {{.Form.RemoteRepo | quote}}"
    command: "open https://`echo {{.Form.RemoteRepo}} | sed 's/:/\\//g'`"
    context: "global"
    prompts:
      - type: "menuFromCommand"
        title: "Visit Remote Repository:"
        key: "RemoteRepo"
        command: "git remote -v"
        filter: "^([^\\s]+)\\s+git@(.*)\\.git \\((.*)\\)$"
        valueFormat: "{{ .group_2 }}"
        labelFormat: "{{.group_1 | cyan}} ({{.group_3 }}) {{ .group_2 }}"
